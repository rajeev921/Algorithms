#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cassert>
#include <cstring>

using namespace std;

typedef struct node {
    int data;
    struct node *next;
}node;

// A utility function to create a new node
node *newNode(int key)
{
    node *temp = new node;
    temp->data = key;
    temp->next = NULL;
    return temp;
}

// A utility function to print a linked list
void printlist(node *head)
{
    while(head != NULL)
    {
        cout << head->data << " ";
        head = head->next;
    }
    cout << endl;
}


void rev_util(node *cur, node *prev, node** head)
{
    if(cur->next == NULL){
       *head = cur;
       cur->next = prev;
       return;
    }
    else {
        rev_util(cur->next, cur, head);
        cur->next = prev;
    }
    return;
}

void reverse(node** head){
    if(!*head)
       return;
    else
       rev_util(*head, NULL, head);
}


int main() {
	// your code goes here
	node *head1 = newNode(1);
    head1->next = newNode(2);
    head1->next->next = newNode(2);
    head1->next->next->next = newNode(4);
    head1->next->next->next->next = newNode(5);
    head1->next->next->next->next->next = newNode(6);
    head1->next->next->next->next->next->next = newNode(7);
    head1->next->next->next->next->next->next->next = newNode(8);
    
    cout << "Given linked list\n";
    printlist(head1);
    
    reverse(&head1);
    cout << "\nReversed linked list\n";
    
    printlist(head1);
    
    return 0;
	
}
