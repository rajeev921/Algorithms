//Implementation of stack from array
#include <stdio.h>
#include<stdlib.h>
#define SIZE 16  // Size of Stack
#define TOP -1  //  It shows when a stack is empty
int arr[SIZE];  //  Used global variable to use as a full size Stack
 
//Insert the element in stack 
void push(int a)
{
	if(TOP > SIZE) // Check the size of stack if it is already full exit from func
	  {
	    exit(2);	
	  	printf("\nStack overflow");
	  }	
	else
	  ++TOP;
	  arr[TOP] = a;
	  printf("\nItem is pushed");
}	
 
// Remove the element from stack
int pop()
{
	int ret;
    if(TOP <= -1) //If stack is empty exit from func
    {
    	printf("\n Stack is empty");
    	exit(3);
    }
    else
    {
    	ret = arr[TOP];
    	--TOP;
    }
    return ret;
}
 
int main(void) {
	// your code goes here
	int ch, tem, ret;
 
	while(1)
	{
		printf("\nEnter your choice ");
		printf("\n1: push \n2: pop \n3: exit \n");
		scanf("%d",&ch);
		switch(ch)
		{
			case 1: printf("\nenter the data which has to be enter in stack\n");
			        scanf("%d",&tem);
			        push(tem);
			        break;
			case 2: ret = pop();
                    printf("\n%d item is popped from stack\n",ret);
			        break;
			case 3: exit(1);
			default : printf("\n Wrong choice\n");
		}
	}
 
	return 0;
}