String


string one("Lottery Winner !");

cout << one << endl;



string two(20, '$');

cout << two << endl;



string three(one);

cout << three << endl;



one += "Oops!";                                   // overloaded +=

cout << one << endl;



two = "Sorry! That was ";

cout << two << endl;



three[0] = 'P';

string four;
four = two + three;    // overloaded +=

cout << four << endl;



char alls[] = "All's well that ends well";

string five(alls, 20);

cout << five << "!\n";



string six (alls+6, alls + 10);

cout << six << " , ";



string seven(&five[6], &five[10]);

cout << seven << "...\n";






-----------------------------------------------------------------

String s = "Hello";
            01234
string s1

// substr(start_pos, len)               

s1 = s.substr(0, 3); // "hel"
s1 = s.substr(1, 3); // "ell"
s3 = s.substr(0, s.length()-1); // "hell"
s4 = s.substr(1); // "ello"

-----------------------------------------------------------------

s1.data();
// Returns a pointer to an array that contains the same sequence of characters as the characters that make up the value of the string object.

int length;

  std::string str = "Test string";
  char* cstr = "Test string";

  if ( str.length() == std::strlen(cstr) )
  {
    std::cout << "str and cstr have the same length.\n";

    if ( memcmp (cstr, str.data(), str.length() ) == 0 )
      std::cout << "str and cstr have the same content.\n";
  }

o/p -
str and cstr have the same length.
str and cstr have the same content.

-----------------------------------------------------------------

swap(str_1, str_2);

str_1.compare(str_2); // if it is equal return 0 

str_1.compare(start_pos_string_1, len_tocompare, str_2);

str.find(str2); 
// Will try to search str_2 in str_1 and if find return the pos //of 1st matching index otherwise -1

str.replace(str.find(str2),str2.length(),"preposition");
// replce string2 in string1 by given tring "preposition"

str.copy(buffer,6,5);
// Copy 6 char from str from pos 5 and copy it to buffer

char * str_2 = str.s_str();
// returns a pointer to the c-string representation of the string object's value.

=================================================================
=================================================================
 // Take string as input

#include <iostream>
#include <algorithm>
#include <string>

using namespace std;

int main()
{
    string s = "Rajeev";
     
    cout <<s <<"\n" ;
    
    cout <<s.length() <<"    " << s.size() ;
    
    return 0;
}

o/p -
Rajeev
6 6

=================================================================

// create an array of string 

#include <iostream>
#include <algorithm>
#include <string>

using namespace std;

int main()
{
    string s[10];
    
    for(int i = 0; i < 10 ; i++){
        cin >> s[i];    
    }
    
    for(int i = 0; i < 10; i++) {
        cout << s[i] <<"   " << s[i].length() <<"    " << s[i].size() <<"\n" ;    
    }

    return 0;    
}

=================================================================

// create an array of string of vector

#include <iostream>
#include <algorithm>
#include <vector>
#include <string>

using namespace std;

int main()
{
   vector<string> ve;
    string str;
  
   // cin >> str; 
    //cout << str;
   
    for(int i = 0; i < 10 ; i++){
        cin >> str; 
        ve.push_back(str);
    }
    
    for(int i = 0; i < 10; i++) {
        cout << ve[i] <<"   " << "\n" ;    
    }
    return 0;    
}

=================================================================
