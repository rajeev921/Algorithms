vector ->


2-d vector

vector< vector <int> > s; // create a 2 dimensional vector

vector< vector<int> > Matrix(N, vector<int>(M, -1)); // Creating a 2d vector of size N*M and initialise all with -1

vector<int> v1array[5];  // An array with 5 elements, each of which being an empty vector of integers. 


------------------------------------------------------------------------------------

#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cassert>
#include <cmath>
#include <iostream>
#include <stack>
#include <queue>
#include <algorithm>
#include <string>
#include <set>
#include <map>

using namespace std;

int main()
{
    // 2d vector
    
    vector< vector<int> > v2(3, vector<int>(4, -1)); // 2-d vector
    
    cout <<"\n";
    
    for(int i = 0; i < 3; i++) {
        for(int j = 0 ; j < 4; j++){
           cout << v2[i][j] <<" "; 
        }
        cout <<"\n";
    }
    
    // Another way of creating a 2d vector
    vector< vector<int> > v1;
    int cnt = 0;
    
    for(int i = 0; i < 4; i++) {
        vector<int> ve(4);    
        v1.push_back(ve);
        for(int j  = 0; j < 4; j++){
            v1[i].push_back(cnt++);
        }
    }
    
    for(int i = 0; i < 4; i++) {
        for(int j = 0 ; j < 4; j++){
           cout << v1[i][j] <<" "; 
        }
        cout <<"\n";
    }
    
    return 0;
}

=================================================================
