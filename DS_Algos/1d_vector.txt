------------------------------------------------------------------------------------
1-d vector

vector<int> vec;          // Empty vector
    
    

vector<int> v(vec);       // Copy one vector into another and initialise them
    

vector<int> v1(10, -1);   // initialise and take a fixed size vector
.    
    

vector<int> v2(10);       // fixed the size of vector and it get by default value 0.

vector<int> v3(v.begin(), v.end() ); //v3 equals to v

int data[] = { 2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31 }; 
vector<int> primes(data, data+(sizeof(data) / sizeof(data[0])));

------------------------------------------------------------------------------

v.push_back(10);

v.size();

v.begin();

v.end();

v.reverse();

v.resize(int);

sort(v.begin(), v.end());   // Sort arry in ascending order

sort(begin(v), end(v) );    // Sort arry in ascending order

sort(v.rbegin(), v.rend()); // Sort array in descending order

v.insert(1, 42); // Insert value 42 after the first 

v.insert(1, v.begin(), v.end()); // Shift all elements from second to last to the appropriate number

random_shuffle (v.begin(), v.end()); // for random shuffle in a vector

-----------------------------------------------------------------


#include <iostream>
#include <vector>
#include <string>
#include <stack>
#include <set>
#include <map>
//#include <unorderd_map>
#include <queue>
#include <algorithm>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#define all(v) v.begin(), v.end()

using namespace std;


int main()
{
    vector<int> v;
    
    for(int i = 0; i < 5; i++) {
        int temp;
        cin >> temp;
        v.push_back(temp);
    }
    cout << "\n Before Sorting Value is    ";
    for(int i = 0; i < v.size(); i++){
        cout << v[i]<< "  ";
    }
    
    sort(all(v));
    cout << "\n After Sorting Value is    ";
    for(int i = 0; i < v.size(); i++){
        cout << v[i] << "  ";
    }
    
    reverse(all(v));
    cout << "\n After reversing Value is    ";
    for(int i = 0; i < v.size(); i++){
        cout << v[i]<< "  ";
    }
    
    return 0;
}

i/p -   
100 3 97  34 26

o/p -

Before Sorting Value is    100  3  97  34  26  
After Sorting Value is    3  26  34  97  100  
After reversing Value is    100  97  34  26  3 

------------------------------------------------------------------------------------